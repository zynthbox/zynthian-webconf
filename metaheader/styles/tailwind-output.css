/*! tailwindcss v4.0.13 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --tw-color-red-300: oklch(0.808 0.114 19.571);
    --tw-color-amber-300: oklch(0.879 0.169 91.605);
    --tw-color-blue-500: oklch(0.623 0.214 259.815);
    --tw-color-gray-100: oklch(0.967 0.003 264.542);
    --tw-color-gray-200: oklch(0.928 0.006 264.531);
    --tw-color-gray-300: oklch(0.872 0.01 258.338);
    --tw-color-gray-500: oklch(0.551 0.027 264.364);
    --tw-color-white: #fff;
    --tw-spacing: 0.25rem;
    --tw-text-sm: 0.875rem;
    --tw-text-sm--line-height: calc(1.25 / 0.875);
    --tw-text-2xl: 1.5rem;
    --tw-text-2xl--line-height: calc(2 / 1.5);
    --tw-text-3xl: 1.875rem;
    --tw-text-3xl--line-height: calc(2.25 / 1.875);
    --tw-text-5xl: 3rem;
    --tw-text-5xl--line-height: 1;
    --tw-font-weight-medium: 500;
    --tw-font-weight-bold: 700;
    --tw-radius-md: 0.375rem;
    --tw-radius-lg: 0.5rem;
    --tw-radius-xl: 0.75rem;
    --tw-animate-spin: spin 1s linear infinite;
    --tw-default-transition-duration: 150ms;
    --tw-default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
}
@layer utilities {
  .tw\:fixed {
    position: fixed;
  }
  .tw\:top-\[48px\] {
    top: 48px;
  }
  .tw\:left-\[20px\] {
    left: 20px;
  }
  .tw\:z-10 {
    z-index: 10;
  }
  .tw\:col-span-2 {
    grid-column: span 2 / span 2;
  }
  .tw\:col-span-10 {
    grid-column: span 10 / span 10;
  }
  .tw\:container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .tw\:m-2 {
    margin: calc(var(--tw-spacing) * 2);
  }
  .tw\:m-3 {
    margin: calc(var(--tw-spacing) * 3);
  }
  .tw\:mx-1 {
    margin-inline: calc(var(--tw-spacing) * 1);
  }
  .tw\:mx-3 {
    margin-inline: calc(var(--tw-spacing) * 3);
  }
  .tw\:mx-auto {
    margin-inline: auto;
  }
  .tw\:mt-1 {
    margin-top: calc(var(--tw-spacing) * 1);
  }
  .tw\:mt-2 {
    margin-top: calc(var(--tw-spacing) * 2);
  }
  .tw\:mt-4 {
    margin-top: calc(var(--tw-spacing) * 4);
  }
  .tw\:ml-2 {
    margin-left: calc(var(--tw-spacing) * 2);
  }
  .tw\:ml-10 {
    margin-left: calc(var(--tw-spacing) * 10);
  }
  .tw\:flex {
    display: flex;
  }
  .tw\:grid {
    display: grid;
  }
  .tw\:inline {
    display: inline;
  }
  .tw\:inline-block {
    display: inline-block;
  }
  .tw\:h-full {
    height: 100%;
  }
  .tw\:min-h-\[300px\] {
    min-height: 300px;
  }
  .tw\:w-full {
    width: 100%;
  }
  .tw\:w-screen {
    width: 100vw;
  }
  .tw\:flex-1 {
    flex: 1;
  }
  .tw\:flex-2 {
    flex: 2;
  }
  .tw\:flex-none {
    flex: none;
  }
  .tw\:grow {
    flex-grow: 1;
  }
  .tw\:table-auto {
    table-layout: auto;
  }
  .tw\:animate-spin {
    animation: var(--tw-animate-spin);
  }
  .tw\:grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  .tw\:flex-col {
    flex-direction: column;
  }
  .tw\:items-center {
    align-items: center;
  }
  .tw\:justify-between {
    justify-content: space-between;
  }
  .tw\:justify-center {
    justify-content: center;
  }
  .tw\:justify-start {
    justify-content: flex-start;
  }
  .tw\:gap-2 {
    gap: calc(var(--tw-spacing) * 2);
  }
  .tw\:gap-4 {
    gap: calc(var(--tw-spacing) * 4);
  }
  .tw\:space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--tw-spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--tw-spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .tw\:rounded-lg {
    border-radius: var(--tw-radius-lg);
  }
  .tw\:rounded-xl {
    border-radius: var(--tw-radius-xl);
  }
  .tw\:border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .tw\:border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .tw\:border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .tw\:border-t-1 {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .tw\:border-r-1 {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .tw\:border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .tw\:border-b-1 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .tw\:border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .tw\:border-b-4 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 4px;
  }
  .tw\:border-b-\[1px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .tw\:border-\[\#09f\] {
    border-color: #09f;
  }
  .tw\:border-blue-500 {
    border-color: var(--tw-color-blue-500);
  }
  .tw\:border-gray-200 {
    border-color: var(--tw-color-gray-200);
  }
  .tw\:border-gray-300 {
    border-color: var(--tw-color-gray-300);
  }
  .tw\:border-transparent {
    border-color: transparent;
  }
  .tw\:bg-\[\#eee\] {
    background-color: #eee;
  }
  .tw\:bg-\[\#eef\] {
    background-color: #eef;
  }
  .tw\:bg-white {
    background-color: var(--tw-color-white);
  }
  .tw\:p-0 {
    padding: calc(var(--tw-spacing) * 0);
  }
  .tw\:p-2 {
    padding: calc(var(--tw-spacing) * 2);
  }
  .tw\:p-3 {
    padding: calc(var(--tw-spacing) * 3);
  }
  .tw\:p-4 {
    padding: calc(var(--tw-spacing) * 4);
  }
  .tw\:px-2 {
    padding-inline: calc(var(--tw-spacing) * 2);
  }
  .tw\:px-3 {
    padding-inline: calc(var(--tw-spacing) * 3);
  }
  .tw\:px-4 {
    padding-inline: calc(var(--tw-spacing) * 4);
  }
  .tw\:py-1 {
    padding-block: calc(var(--tw-spacing) * 1);
  }
  .tw\:py-2 {
    padding-block: calc(var(--tw-spacing) * 2);
  }
  .tw\:pt-5 {
    padding-top: calc(var(--tw-spacing) * 5);
  }
  .tw\:pl-0 {
    padding-left: calc(var(--tw-spacing) * 0);
  }
  .tw\:pl-2 {
    padding-left: calc(var(--tw-spacing) * 2);
  }
  .tw\:text-center {
    text-align: center;
  }
  .tw\:text-3xl {
    font-size: var(--tw-text-3xl);
    line-height: var(--tw-leading, var(--tw-text-3xl--line-height));
  }
  .tw\:text-5xl {
    font-size: var(--tw-text-5xl);
    line-height: var(--tw-leading, var(--tw-text-5xl--line-height));
  }
  .tw\:text-sm {
    font-size: var(--tw-text-sm);
    line-height: var(--tw-leading, var(--tw-text-sm--line-height));
  }
  .tw\:font-bold {
    --tw-font-weight: var(--tw-font-weight-bold);
    font-weight: var(--tw-font-weight-bold);
  }
  .tw\:font-medium {
    --tw-font-weight: var(--tw-font-weight-medium);
    font-weight: var(--tw-font-weight-medium);
  }
  .tw\:whitespace-nowrap {
    white-space: nowrap;
  }
  .tw\:text-\[\#0078d7\] {
    color: #0078d7;
  }
  .tw\:text-blue-500 {
    color: var(--tw-color-blue-500);
  }
  .tw\:text-gray-500 {
    color: var(--tw-color-gray-500);
  }
  .tw\:text-red-300 {
    color: var(--tw-color-red-300);
  }
  .tw\:text-white {
    color: var(--tw-color-white);
  }
  .tw\:uppercase {
    text-transform: uppercase;
  }
  .tw\:underline {
    text-decoration-line: underline;
  }
  .tw\:shadow-2xs {
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .tw\:shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .tw\:shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .tw\:transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--tw-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--tw-default-transition-duration));
  }
  .tw\:hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--tw-color-gray-100);
      }
    }
  }
  .tw\:hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .tw\:disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .tw\:sm\:col-span-3 {
    @media (width >= 40rem) {
      grid-column: span 3 / span 3;
    }
  }
  .tw\:sm\:col-span-9 {
    @media (width >= 40rem) {
      grid-column: span 9 / span 9;
    }
  }
  .tw\:sm\:col-span-12 {
    @media (width >= 40rem) {
      grid-column: span 12 / span 12;
    }
  }
  .tw\:sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .tw\:sm\:min-h-\[200px\] {
    @media (width >= 40rem) {
      min-height: 200px;
    }
  }
  .tw\:sm\:grid-cols-12 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
}
.shadcnButton {
  letter-spacing: inherit;
  border-radius: 0;
  opacity: 1;
  padding: 0;
  border: 0 solid;
  background-color: transparent;
  cursor: pointer;
  padding-inline: calc(var(--tw-spacing) * 5);
  padding-block: calc(var(--tw-spacing) * 2);
  font-size: 16px;
  &:hover {
    @media (hover: hover) {
      color: var(--tw-color-amber-300);
    }
  }
}
.shadcnButtonActive {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2px;
  border-color: #09f;
}
.shadcnSelect {
  width: 100%;
  border-radius: var(--tw-radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  padding-inline: calc(var(--tw-spacing) * 3);
  padding-block: calc(var(--tw-spacing) * 2);
  font-size: var(--tw-text-2xl);
  line-height: var(--tw-leading, var(--tw-text-2xl--line-height));
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
