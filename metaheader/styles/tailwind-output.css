/*! tailwindcss v4.0.13 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --tw-color-amber-300: oklch(0.879 0.169 91.605);
    --tw-color-gray-200: oklch(0.928 0.006 264.531);
    --tw-color-gray-300: oklch(0.872 0.01 258.338);
    --tw-spacing: 0.25rem;
    --tw-font-weight-bold: 700;
    --tw-radius-xl: 0.75rem;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .tw\:container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .tw\:m-2 {
    margin: calc(var(--tw-spacing) * 2);
  }
  .tw\:mx-1 {
    margin-inline: calc(var(--tw-spacing) * 1);
  }
  .tw\:mx-3 {
    margin-inline: calc(var(--tw-spacing) * 3);
  }
  .tw\:mt-7 {
    margin-top: calc(var(--tw-spacing) * 7);
  }
  .tw\:ml-2 {
    margin-left: calc(var(--tw-spacing) * 2);
  }
  .tw\:ml-10 {
    margin-left: calc(var(--tw-spacing) * 10);
  }
  .tw\:flex {
    display: flex;
  }
  .tw\:grid {
    display: grid;
  }
  .tw\:inline {
    display: inline;
  }
  .tw\:min-h-\[300px\] {
    min-height: 300px;
  }
  .tw\:flex-2 {
    flex: 2;
  }
  .tw\:table-auto {
    table-layout: auto;
  }
  .tw\:flex-col {
    flex-direction: column;
  }
  .tw\:justify-between {
    justify-content: space-between;
  }
  .tw\:gap-2 {
    gap: calc(var(--tw-spacing) * 2);
  }
  .tw\:rounded-xl {
    border-radius: var(--tw-radius-xl);
  }
  .tw\:border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .tw\:border-t-1 {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .tw\:border-r-1 {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .tw\:border-b-1 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .tw\:border-gray-200 {
    border-color: var(--tw-color-gray-200);
  }
  .tw\:border-gray-300 {
    border-color: var(--tw-color-gray-300);
  }
  .tw\:bg-\[\#eee\] {
    background-color: #eee;
  }
  .tw\:bg-\[\#eef\] {
    background-color: #eef;
  }
  .tw\:bg-amber-300 {
    background-color: var(--tw-color-amber-300);
  }
  .tw\:p-2 {
    padding: calc(var(--tw-spacing) * 2);
  }
  .tw\:pl-0 {
    padding-left: calc(var(--tw-spacing) * 0);
  }
  .tw\:pl-2 {
    padding-left: calc(var(--tw-spacing) * 2);
  }
  .tw\:font-bold {
    --tw-font-weight: var(--tw-font-weight-bold);
    font-weight: var(--tw-font-weight-bold);
  }
  .tw\:underline {
    text-decoration-line: underline;
  }
  .tw\:shadow-2xs {
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .tw\:sm\:col-span-3 {
    @media (width >= 40rem) {
      grid-column: span 3 / span 3;
    }
  }
  .tw\:sm\:col-span-9 {
    @media (width >= 40rem) {
      grid-column: span 9 / span 9;
    }
  }
  .tw\:sm\:col-span-12 {
    @media (width >= 40rem) {
      grid-column: span 12 / span 12;
    }
  }
  .tw\:sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .tw\:sm\:min-h-\[200px\] {
    @media (width >= 40rem) {
      min-height: 200px;
    }
  }
  .tw\:sm\:grid-cols-12 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
