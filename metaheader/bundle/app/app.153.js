"use strict";(self.webpackChunkzynthbox_webconf_metaheader=self.webpackChunkzynthbox_webconf_metaheader||[]).push([[153],{1153:(e,t,a)=>{a.r(t),a.d(t,{WaveParser:()=>w});var i=a(7866),n=a(9223),s=a(3606),r=a(1227);const o={len:8,get:(e,t)=>({chunkID:new s.StringType(4,"latin1").get(e,t),chunkSize:s.UINT32_LE.get(e,t+4)})};class h{constructor(e){this.tagHeader=e,this.len=e.chunkSize,this.len+=1&this.len}get(e,t){return new s.StringType(this.tagHeader.chunkSize,"ascii").get(e,t)}}var c,d=a(1030);class k extends((0,d.f8)("Wave")){}!function(e){e[e.PCM=1]="PCM",e[e.ADPCM=2]="ADPCM",e[e.IEEE_FLOAT=3]="IEEE_FLOAT",e[e.MPEG_ADTS_AAC=5632]="MPEG_ADTS_AAC",e[e.MPEG_LOAS=5634]="MPEG_LOAS",e[e.RAW_AAC1=255]="RAW_AAC1",e[e.DOLBY_AC3_SPDIF=146]="DOLBY_AC3_SPDIF",e[e.DVM=8192]="DVM",e[e.RAW_SPORT=576]="RAW_SPORT",e[e.ESST_AC3=577]="ESST_AC3",e[e.DRM=9]="DRM",e[e.DTS2=8193]="DTS2",e[e.MPEG=80]="MPEG"}(c||(c={}));class g{constructor(e){if(e.chunkSize<16)throw new k("Invalid chunk size");this.len=e.chunkSize}get(e,t){return{wFormatTag:s.UINT16_LE.get(e,t),nChannels:s.UINT16_LE.get(e,t+2),nSamplesPerSec:s.UINT32_LE.get(e,t+4),nAvgBytesPerSec:s.UINT32_LE.get(e,t+8),nBlockAlign:s.UINT16_LE.get(e,t+12),wBitsPerSample:s.UINT16_LE.get(e,t+14)}}}class m{constructor(e){if(e.chunkSize<4)throw new k("Invalid fact chunk size.");this.len=e.chunkSize}get(e,t){return{dwSampleLength:s.UINT32_LE.get(e,t)}}}var u=a(3777),l=a(2826),S=a(1339),T=a(2291);const I={len:420,get:(e,t)=>({description:(0,l.dS)(new s.StringType(256,"ascii").get(e,t)).trim(),originator:(0,l.dS)(new s.StringType(32,"ascii").get(e,t+256)).trim(),originatorReference:(0,l.dS)(new s.StringType(32,"ascii").get(e,t+288)).trim(),originationDate:(0,l.dS)(new s.StringType(10,"ascii").get(e,t+320)).trim(),originationTime:(0,l.dS)(new s.StringType(8,"ascii").get(e,t+330)).trim(),timeReferenceLow:s.UINT32_LE.get(e,t+338),timeReferenceHigh:s.UINT32_LE.get(e,t+342),version:s.UINT16_LE.get(e,t+346),umid:new s.Uint8ArrayType(64).get(e,t+348),loudnessValue:s.UINT16_LE.get(e,t+412),maxTruePeakLevel:s.UINT16_LE.get(e,t+414),maxMomentaryLoudness:s.UINT16_LE.get(e,t+416),maxShortTermLoudness:s.UINT16_LE.get(e,t+418)})},f=r("music-metadata:parser:RIFF");class w extends T.g{constructor(){super(...arguments),this.blockAlign=0}async parse(){const e=await this.tokenizer.readToken(o);if(f(`pos=${this.tokenizer.position}, parse: chunkID=${e.chunkID}`),"RIFF"===e.chunkID)return this.parseRiffChunk(e.chunkSize).catch((e=>{if(!(e instanceof i.dL))throw e}))}async parseRiffChunk(e){const t=await this.tokenizer.readToken(S.A);if(this.metadata.setFormat("container",t),"WAVE"===t)return this.readWaveChunk(e-S.A.len);throw new k(`Unsupported RIFF format: RIFF/${t}`)}async readWaveChunk(e){for(;e>=o.len;){const t=await this.tokenizer.readToken(o);switch(e-=o.len+t.chunkSize,t.chunkSize>e&&this.metadata.addWarning("Data chunk size exceeds file size"),this.header=t,f(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${t.chunkID}`),t.chunkID){case"LIST":await this.parseListTag(t);break;case"fact":this.metadata.setFormat("lossless",!1),this.fact=await this.tokenizer.readToken(new m(t));break;case"fmt ":{const e=await this.tokenizer.readToken(new g(t));let a=c[e.wFormatTag];a||(f(`WAVE/non-PCM format=${e.wFormatTag}`),a=`non-PCM (${e.wFormatTag})`),this.metadata.setFormat("codec",a),this.metadata.setFormat("bitsPerSample",e.wBitsPerSample),this.metadata.setFormat("sampleRate",e.nSamplesPerSec),this.metadata.setFormat("numberOfChannels",e.nChannels),this.metadata.setFormat("bitrate",e.nBlockAlign*e.nSamplesPerSec*8),this.blockAlign=e.nBlockAlign;break}case"id3 ":case"ID3 ":{const e=await this.tokenizer.readToken(new s.Uint8ArrayType(t.chunkSize)),a=n.FY(e);await(new u.e).parse(this.metadata,a,this.options);break}case"data":{!1!==this.metadata.format.lossless&&this.metadata.setFormat("lossless",!0);let e=t.chunkSize;if(this.tokenizer.fileInfo.size){const t=this.tokenizer.fileInfo.size-this.tokenizer.position;t<e&&(this.metadata.addWarning("data chunk length exceeding file length"),e=t)}const a=this.fact?this.fact.dwSampleLength:4294967295===e?void 0:e/this.blockAlign;a&&(this.metadata.setFormat("numberOfSamples",a),this.metadata.format.sampleRate&&this.metadata.setFormat("duration",a/this.metadata.format.sampleRate)),"ADPCM"===this.metadata.format.codec?this.metadata.setFormat("bitrate",352e3):this.metadata.format.sampleRate&&this.metadata.setFormat("bitrate",this.blockAlign*this.metadata.format.sampleRate*8),await this.tokenizer.ignore(t.chunkSize);break}case"bext":{const e=await this.tokenizer.readToken(I);Object.keys(e).forEach((t=>{this.metadata.addTag("exif",`bext.${t}`,e[t])}));const a=t.chunkSize-I.len;await this.tokenizer.ignore(a);break}case"\0\0\0\0":f(`Ignore padding chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${t.chunkID}`),await this.tokenizer.ignore(t.chunkSize);break;default:f(`Ignore chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning(`Ignore chunk: RIFF/${t.chunkID}`),await this.tokenizer.ignore(t.chunkSize)}this.header.chunkSize%2==1&&(f("Read odd padding byte"),await this.tokenizer.ignore(1))}}async parseListTag(e){const t=await this.tokenizer.readToken(new s.StringType(4,"latin1"));return f("pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s",this.tokenizer.position,t),"INFO"===t?this.parseRiffInfoTags(e.chunkSize-4):(this.metadata.addWarning(`Ignore chunk: RIFF/WAVE/LIST/${t}`),f(`Ignoring chunkID=RIFF/WAVE/LIST/${t}`),this.tokenizer.ignore(e.chunkSize-4).then())}async parseRiffInfoTags(e){for(;e>=8;){const t=await this.tokenizer.readToken(o),a=new h(t),i=await this.tokenizer.readToken(a);this.addTag(t.chunkID,l.dS(i)),e-=8+a.len}if(0!==e)throw new k(`Illegal remaining size: ${e}`)}addTag(e,t){this.metadata.addTag("exif",e,t)}}}}]);